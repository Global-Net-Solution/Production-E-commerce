import {
  getDefaultSlots,
  validatePackage
} from "./chunk-ZERL3UN2.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-ON7STAJ4.js";

// node_modules/@progress/kendo-vue-animation/dist/es/util.js
var outerHeight = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginTop = parseFloat(computedStyles.marginTop);
  var marginBottom = parseFloat(computedStyles.marginBottom);
  return element.offsetHeight + marginTop + marginBottom;
};
var outerWidth = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginLeft = parseFloat(computedStyles.marginLeft);
  var marginRight = parseFloat(computedStyles.marginRight);
  return element.offsetWidth + marginLeft + marginRight;
};
var styles = {
  "animation-container": "k-animation-container",
  "animation-container-relative": "k-animation-container-relative",
  "animation-container-fixed": "k-animation-container-fixed",
  "push-right-enter": "k-push-right-enter",
  "push-right-appear": "k-push-right-appear",
  "push-right-enter-active": "k-push-right-enter-active",
  "push-right-appear-active": "k-push-right-appear-active",
  "push-right-exit": "k-push-right-exit",
  "push-right-exit-active": "k-push-right-exit-active",
  "push-left-enter": "k-push-left-enter",
  "push-left-appear": "k-push-left-appear",
  "push-left-enter-active": "k-push-left-enter-active",
  "push-left-appear-active": "k-push-left-appear-active",
  "push-left-exit": "k-push-left-exit",
  "push-left-exit-active": "k-push-left-exit-active",
  "push-down-enter": "k-push-down-enter",
  "push-down-appear": "k-push-down-appear",
  "push-down-enter-active": "k-push-down-enter-active",
  "push-down-appear-active": "k-push-down-appear-active",
  "push-down-exit": "k-push-down-exit",
  "push-down-exit-active": "k-push-down-exit-active",
  "push-up-enter": "k-push-up-enter",
  "push-up-appear": "k-push-up-appear",
  "push-up-enter-active": "k-push-up-enter-active",
  "push-up-appear-active": "k-push-up-appear-active",
  "push-up-exit": "k-push-up-exit",
  "push-up-exit-active": "k-push-up-exit-active",
  "expand": "k-expand",
  "expand-vertical-enter": "k-expand-vertical-enter",
  "expand-vertical-appear": "k-expand-vertical-appear",
  "expand-vertical-enter-active": "k-expand-vertical-enter-active",
  "expand-vertical-appear-active": "k-expand-vertical-appear-active",
  "expand-vertical-exit": "k-expand-vertical-exit",
  "expand-vertical-exit-active": "k-expand-vertical-exit-active",
  "expand-horizontal-enter": "k-expand-horizontal-enter",
  "expand-horizontal-appear": "k-expand-horizontal-appear",
  "expand-horizontal-enter-active": "k-expand-horizontal-enter-active",
  "expand-horizontal-appear-active": "k-expand-horizontal-appear-active",
  "expand-horizontal-exit": "k-expand-horizontal-exit",
  "expand-horizontal-exit-active": "k-expand-horizontal-exit-active",
  "child-animation-container": "k-child-animation-container",
  "fade-enter": "k-fade-enter",
  "fade-appear": "k-fade-appear",
  "fade-enter-active": "k-fade-enter-active",
  "fade-appear-active": "k-fade-appear-active",
  "fade-exit": "k-fade-exit",
  "fade-exit-active": "k-fade-exit-active",
  "zoom-in-enter": "k-zoom-in-enter",
  "zoom-in-appear": "k-zoom-in-appear",
  "zoom-in-enter-active": "k-zoom-in-enter-active",
  "zoom-in-appear-active": "k-zoom-in-appear-active",
  "zoom-in-exit": "k-zoom-in-exit",
  "zoom-in-exit-active": "k-zoom-in-exit-active",
  "zoom-out-enter": "k-zoom-out-enter",
  "zoom-out-appear": "k-zoom-out-appear",
  "zoom-out-enter-active": "k-zoom-out-enter-active",
  "zoom-out-appear-active": "k-zoom-out-appear-active",
  "zoom-out-exit": "k-zoom-out-exit",
  "zoom-out-exit-active": "k-zoom-out-exit-active",
  "slide-in-appear": "k-slide-in-appear",
  "centered": "k-centered",
  "slide-in-appear-active": "k-slide-in-appear-active",
  "slide-down-enter": "k-slide-down-enter",
  "slide-down-appear": "k-slide-down-appear",
  "slide-down-enter-active": "k-slide-down-enter-active",
  "slide-down-appear-active": "k-slide-down-appear-active",
  "slide-down-exit": "k-slide-down-exit",
  "slide-down-exit-active": "k-slide-down-exit-active",
  "slide-up-enter": "k-slide-up-enter",
  "slide-up-appear": "k-slide-up-appear",
  "slide-up-enter-active": "k-slide-up-enter-active",
  "slide-up-appear-active": "k-slide-up-appear-active",
  "slide-up-exit": "k-slide-up-exit",
  "slide-up-exit-active": "k-slide-up-exit-active",
  "slide-right-enter": "k-slide-right-enter",
  "slide-right-appear": "k-slide-right-appear",
  "slide-right-enter-active": "k-slide-right-enter-active",
  "slide-right-appear-active": "k-slide-right-appear-active",
  "slide-right-exit": "k-slide-right-exit",
  "slide-right-exit-active": "k-slide-right-exit-active",
  "slide-left-enter": "k-slide-left-enter",
  "slide-left-appear": "k-slide-left-appear",
  "slide-left-enter-active": "k-slide-left-enter-active",
  "slide-left-appear-active": "k-slide-left-appear-active",
  "slide-left-exit": "k-slide-left-exit",
  "slide-left-exit-active": "k-slide-left-exit-active",
  "reveal-vertical-enter": "k-reveal-vertical-enter",
  "reveal-vertical-appear": "k-reveal-vertical-appear",
  "reveal-vertical-enter-active": "k-reveal-vertical-enter-active",
  "reveal-vertical-appear-active": "k-reveal-vertical-appear-active",
  "reveal-vertical-exit": "k-reveal-vertical-exit",
  "reveal-vertical-exit-active": "k-reveal-vertical-exit-active",
  "reveal-horizontal-enter": "k-reveal-horizontal-enter",
  "reveal-horizontal-appear": "k-reveal-horizontal-appear",
  "reveal-horizontal-enter-active": "k-reveal-horizontal-enter-active",
  "reveal-horizontal-appear-active": "k-reveal-horizontal-appear-active",
  "reveal-horizontal-exit": "k-reveal-horizontal-exit",
  "reveal-horizontal-exit-active": "k-reveal-horizontal-exit-active"
};
var util_default = {
  outerHeight,
  outerWidth,
  styles
};

// node_modules/@progress/kendo-vue-animation/dist/es/AnimationChild.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var ref = allVue.ref;
var Transition = allVue.Transition;
var styles2 = util_default.styles;
var AnimationChildVue2 = {
  props: {
    in: Boolean,
    transitionName: {
      type: String,
      required: true
    },
    transitionStyle: Object,
    componentChildClassName: [Array],
    className: String,
    appear: {
      type: Boolean,
      default: true
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: Number,
    transitionExitDuration: Number,
    mountOnEnter: Boolean,
    unmountOnExit: Boolean,
    animationEnteringStyle: Object,
    animationEnteredStyle: Object,
    animationExitingStyle: Object,
    animationExitedStyle: Object
  },
  created: function created() {
    this.animationStep = "";
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    var elementRef = ref(null);
    return {
      v3,
      elementRef
    };
  },
  mounted: function mounted() {
    this._element = this.v3 ? this.elementRef || null : this.$refs.element || null;
  },
  computed: {
    element: {
      get: function get() {
        return this._element;
      }
    }
  },
  methods: {
    onBeforeEnter: function onBeforeEnter(e) {
      this.$emit("beforeenter", {
        animatedElement: e,
        target: this
      });
    },
    onEnter: function onEnter(e) {
      this.animationStep = "entering";
      this.$emit("entering", {
        animatedElement: e,
        target: this
      });
    },
    onAfterEnter: function onAfterEnter(e) {
      this.animationStep = "entered";
      this.$emit("entered", {
        animatedElement: e,
        target: this
      });
    },
    onBeforeLeave: function onBeforeLeave(e) {
      this.$emit("exit", {
        animatedElement: e,
        target: this
      });
    },
    onLeave: function onLeave(e) {
      this.animationStep = "exiting";
      this.$emit("exiting", {
        animatedElement: e,
        target: this
      });
    },
    onAfterLeave: function onAfterLeave(e) {
      this.animationStep = "exited";
      this.$emit("exited", {
        animatedElement: e,
        target: this
      });
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var _a = this.$props, appear = _a.appear, enter = _a.enter, exit = _a.exit, transitionName = _a.transitionName, transitionEnterDuration = _a.transitionEnterDuration, transitionExitDuration = _a.transitionExitDuration, className = _a.className, componentChildClassName = _a.componentChildClassName, mountOnEnter = _a.mountOnEnter, unmountOnExit = _a.unmountOnExit, animationEnteringStyle = _a.animationEnteringStyle, animationEnteredStyle = _a.animationEnteredStyle, animationExitingStyle = _a.animationExitingStyle, animationExitedStyle = _a.animationExitedStyle, other = __rest(_a, ["appear", "enter", "exit", "transitionName", "transitionEnterDuration", "transitionExitDuration", "className", "componentChildClassName", "mountOnEnter", "unmountOnExit", "animationEnteringStyle", "animationEnteredStyle", "animationExitingStyle", "animationExitedStyle"]);
    var defaultSlot = getDefaultSlots(this);
    var hasChildren = this.v3 ? appear : !!defaultSlot;
    var transitionTag = this.v3 ? Transition : "transition";
    var childAnimationContainerClassNames = [componentChildClassName, styles2["child-animation-container"]];
    var enterDuration = enter ? transitionEnterDuration : 0;
    var exitDuration = exit ? transitionExitDuration : 0;
    var defaultStyle = __assign({
      transitionDelay: "0ms",
      transitionDuration: hasChildren ? "".concat(enterDuration, "ms") : "".concat(exitDuration, "ms")
    }, this.$props.transitionStyle);
    var animationStyle = {
      entering: __assign({
        transitionDuration: "".concat(enterDuration, "ms")
      }, animationEnteringStyle),
      entered: __assign({}, animationEnteredStyle),
      exiting: __assign({
        transitionDuration: "".concat(exitDuration, "ms")
      }, animationExitingStyle),
      exited: __assign({}, animationExitedStyle)
    };
    var childElementStyles = [defaultStyle, animationStyle[this.animationStep]];
    var duration = {
      enter: enterDuration,
      leave: exitDuration
    };
    var rendererChildren = [hasChildren ? h("div", {
      style: childElementStyles,
      "class": childAnimationContainerClassNames,
      ref: this.v3 ? function(el) {
        _this.elementRef = el;
      } : "element"
    }, [defaultSlot]) : null];
    return h(transitionTag, {
      duration,
      attrs: this.v3 ? null : {
        duration,
        name: transitionName,
        appear,
        appearClass: styles2["".concat(transitionName, "-appear")] || "".concat(transitionName, "-appear"),
        appearToClass: styles2["".concat(transitionName, "-appear-active")] || "".concat(transitionName, "-appear-active"),
        enterClass: styles2["".concat(transitionName, "-enter")] || "".concat(transitionName, "-enter"),
        enterToClass: styles2["".concat(transitionName, "-enter-active")] || "".concat(transitionName, "-enter-active"),
        leaveClass: styles2["".concat(transitionName, "-exit")] || "".concat(transitionName, "-exit"),
        leaveToClass: styles2["".concat(transitionName, "-exit-active")] || "".concat(transitionName, "-exit-active")
      },
      name: transitionName,
      appear,
      appearFromClass: styles2["".concat(transitionName, "-appear")] || "".concat(transitionName, "-appear"),
      enterFromClass: styles2["".concat(transitionName, "-enter")] || "".concat(transitionName, "-enter"),
      leaveFromClass: styles2["".concat(transitionName, "-exit")] || "".concat(transitionName, "-exit"),
      appearToClass: styles2["".concat(transitionName, "-appear-active")] || "".concat(transitionName, "-appear-active"),
      enterToClass: styles2["".concat(transitionName, "-enter-active")] || "".concat(transitionName, "-enter-active"),
      leaveToClass: styles2["".concat(transitionName, "-exit-active")] || "".concat(transitionName, "-exit-active"),
      onBeforeEnter: this.onBeforeEnter,
      on: this.v3 ? null : {
        "beforeEnter": this.onBeforeEnter,
        "enter": this.onEnter,
        "afterEnter": this.onAfterEnter,
        "beforeLeave": this.onBeforeLeave,
        "leave": this.onLeave,
        "afterLeave": this.onAfterLeave
      },
      onEnter: this.onEnter,
      onAfterEnter: this.onAfterEnter,
      onBeforeLeave: this.onBeforeLeave,
      onLeave: this.onLeave,
      onAfterLeave: this.onAfterLeave
    }, this.v3 ? function() {
      return rendererChildren;
    } : rendererChildren);
  }
};
var AnimationChild = AnimationChildVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-animation",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1718172523,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-animation/dist/es/Animation.js
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var allVue2 = vue_runtime_esm_bundler_exports;
var gh2 = allVue2.h;
var isV32 = allVue2.version && allVue2.version[0] === "3";
var styles3 = util_default.styles;
var AnimationVue2 = {
  props: {
    componentChildStyle: Object,
    childFactory: Object,
    className: String,
    tag: String,
    id: String,
    animationEnteringStyle: Object,
    animationExitingStyle: Object,
    componentChildClassName: [Array],
    transitionName: {
      type: String,
      required: true
    },
    appear: {
      type: Boolean,
      default: true
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number
    },
    transitionExitDuration: {
      type: Number
    }
  },
  methods: {
    onEntering: function onEntering(e) {
      this.$emit("entering", e);
    },
    onEnter: function onEnter2(e) {
      this.$emit("enter", e);
    },
    onEntered: function onEntered(e) {
      this.$emit("entered", e);
    },
    onExit: function onExit(e) {
      this.$emit("exit", e);
    },
    onExiting: function onExiting(e) {
      this.$emit("exiting", e);
    },
    onExited: function onExited(e) {
      this.$emit("exited", e);
    }
  },
  // @ts-ignore
  setup: !isV32 ? void 0 : function() {
    var v3 = !!isV32;
    return {
      v3
    };
  },
  created: function created2() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  render: function render2(createElement) {
    var h = gh2 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, id = _a.id, tag = _a.tag, role = _a.role, className = _a.className, childFactory = _a.childFactory, stackChildren = _a.stackChildren, componentChildStyle = _a.componentChildStyle, componentChildClassName = _a.componentChildClassName, other = __rest2(_a, ["id", "tag", "role", "className", "childFactory", "stackChildren", "componentChildStyle", "componentChildClassName"]);
    var parentDivClass = [styles3["animation-container"], styles3["animation-container-relative"], className];
    return h("div", {
      id: this.$props.id,
      attrs: this.v3 ? void 0 : {
        id: this.$props.id,
        role
      },
      "class": parentDivClass,
      role
    }, [
      // @ts-ignore function children
      h(AnimationChild, {
        key: "some",
        style: componentChildStyle,
        appear: this.$props.appear,
        attrs: this.v3 ? void 0 : {
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionName: this.$props.transitionName,
          componentChildClassName: this.$props.componentChildClassName,
          animationEnteringStyle: this.$props.animationEnteringStyle,
          animationExitingStyle: this.$props.animationExitingStyle,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration
        },
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionName: this.$props.transitionName,
        componentChildClassName: this.$props.componentChildClassName,
        onBeforeenter: this.onEnter,
        on: this.v3 ? void 0 : {
          "beforeenter": this.onEnter,
          "entering": this.onEntering,
          "entered": this.onEntered,
          "exit": this.onExit,
          "exiting": this.onExiting,
          "exited": this.onExited
        },
        onEntering: this.onEntering,
        onEntered: this.onEntered,
        onExit: this.onExit,
        onExiting: this.onExiting,
        onExited: this.onExited,
        animationEnteringStyle: this.$props.animationEnteringStyle,
        animationExitingStyle: this.$props.animationExitingStyle,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    ]);
  }
};
var Animation = AnimationVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Fade.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh3 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";
var FadeVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: false
    },
    transitionEnterDuration: {
      type: Number,
      default: 500
    },
    transitionExitDuration: {
      type: Number,
      default: 500
    },
    componentChildStyle: Object,
    childFactory: Object,
    className: String,
    tag: String,
    id: String
  },
  // @ts-ignore
  setup: !isV33 ? void 0 : function() {
    var v3 = !!isV33;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render3(createElement) {
    var h = gh3 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return (
      // @ts-ignore function children
      h(Animation, {
        transitionName: "fade",
        attrs: this.v3 ? void 0 : {
          transitionName: "fade",
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          componentChildStyle: this.$props.componentChildStyle,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration
        },
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        componentChildStyle: this.$props.componentChildStyle,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Fade = FadeVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Expand.js
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var allVue4 = vue_runtime_esm_bundler_exports;
var gh4 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";
var ExpandVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    childFactory: Object,
    className: String,
    direction: {
      type: String,
      default: "vertical"
    },
    componentChildStyle: Object,
    tag: String,
    id: String
  },
  // @ts-ignore
  setup: !isV34 ? void 0 : function() {
    var v3 = !!isV34;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render4(createElement) {
    var h = gh4 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, direction = _a.direction, other = __rest3(_a, ["direction"]);
    var transitionName = "expand-".concat(this.$props.direction);
    return (
      // @ts-ignore function children
      h(Animation, {
        transitionName,
        attrs: this.v3 ? void 0 : {
          transitionName,
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          componentChildStyle: this.$props.componentChildStyle,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration
        },
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        componentChildStyle: this.$props.componentChildStyle,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Expand = ExpandVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Push.js
var allVue5 = vue_runtime_esm_bundler_exports;
var gh5 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";
var EXITING_ANIMATION_STYLE = {
  position: "absolute",
  top: "0",
  left: "0"
};
var PushVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    childFactory: Object,
    componentChildStyle: Object,
    className: String,
    direction: {
      type: String,
      default: "right"
    },
    tag: String,
    id: String
  },
  // @ts-ignore
  setup: !isV35 ? void 0 : function() {
    var v3 = !!isV35;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render5(createElement) {
    var h = gh5 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var transitionName = "push-".concat(this.$props.direction);
    return (
      // @ts-ignore function children
      h(Animation, {
        transitionName,
        attrs: this.v3 ? void 0 : {
          transitionName,
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration,
          componentChildStyle: this.$props.componentChildStyle,
          animationExitingStyle: this.$props.stackChildren ? EXITING_ANIMATION_STYLE : void 0
        },
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration,
        componentChildStyle: this.$props.componentChildStyle,
        animationExitingStyle: this.$props.stackChildren ? EXITING_ANIMATION_STYLE : void 0
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Push = PushVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Slide.js
var __rest4 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var allVue6 = vue_runtime_esm_bundler_exports;
var gh6 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var SlideVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    componentChildClassName: [Array],
    childFactory: Object,
    componentChildStyle: Object,
    className: String,
    direction: {
      type: String,
      default: "down"
    },
    tag: String,
    id: String,
    role: String
  },
  methods: {
    onEntering: function onEntering2(e) {
      this.$emit("entering", e);
    },
    onEnter: function onEnter3(e) {
      this.$emit("enter", e);
    },
    onEntered: function onEntered2(e) {
      this.$emit("entered", e);
    },
    onExit: function onExit2(e) {
      this.$emit("exit", e);
    },
    onExiting: function onExiting2(e) {
      this.$emit("exiting", e);
    },
    onExited: function onExited2(e) {
      this.$emit("exited", e);
    }
  },
  // @ts-ignore
  setup: !isV36 ? void 0 : function() {
    var v3 = !!isV36;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render6(createElement) {
    var h = gh6 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, direction = _a.direction, id = _a.id, other = __rest4(_a, ["direction", "id"]);
    var transitionName = "slide-".concat(this.$props.direction);
    return (
      // @ts-ignore function children
      h(Animation, {
        id,
        attrs: this.v3 ? void 0 : {
          id,
          transitionName,
          componentChildClassName: this.$props.componentChildClassName,
          componentChildStyle: this.$props.componentChildStyle,
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration
        },
        transitionName,
        componentChildClassName: this.$props.componentChildClassName,
        componentChildStyle: this.$props.componentChildStyle,
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        onEnter: this.onEnter,
        on: this.v3 ? void 0 : {
          "enter": this.onEnter,
          "entering": this.onEntering,
          "entered": this.onEntered,
          "exit": this.onExit,
          "exiting": this.onExiting,
          "exited": this.onExited
        },
        onEntering: this.onEntering,
        onEntered: this.onEntered,
        onExit: this.onExit,
        onExiting: this.onExiting,
        onExited: this.onExited,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Slide = SlideVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Zoom.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh7 = allVue7.h;
var isV37 = allVue7.version && allVue7.version[0] === "3";
var EXITING_ANIMATION_STYLE2 = {
  position: "absolute",
  top: "0",
  left: "0"
};
var ZoomVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    stackChildren: {
      type: Boolean,
      default: false
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    childFactory: Object,
    className: String,
    direction: {
      type: String,
      default: "out"
    },
    tag: String,
    id: String
  },
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render7(createElement) {
    var h = gh7 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var transitionName = "zoom-".concat(this.$props.direction);
    return (
      // @ts-ignore function children
      h(Animation, {
        transitionName,
        attrs: this.v3 ? void 0 : {
          transitionName,
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration,
          animationExitingStyle: this.$props.stackChildren ? EXITING_ANIMATION_STYLE2 : void 0
        },
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration,
        animationExitingStyle: this.$props.stackChildren ? EXITING_ANIMATION_STYLE2 : void 0
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Zoom = ZoomVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/Reveal.js
var __rest5 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var allVue8 = vue_runtime_esm_bundler_exports;
var gh8 = allVue8.h;
var isV38 = allVue8.version && allVue8.version[0] === "3";
var noop = function noop2() {
};
var RevealVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    componentChildStyle: Object,
    childFactory: Object,
    className: String,
    direction: {
      type: String,
      default: "vertical"
    },
    tag: String,
    id: String
  },
  data: function data() {
    return {
      maxHeight: "",
      maxWidth: ""
    };
  },
  methods: {
    componentWillEnter: function componentWillEnter(event) {
      var onEnter4 = this.$props.onEnter;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onEnter4) {
          onEnter4.call(void 0, event);
        }
      });
    },
    componentIsEntering: function componentIsEntering(event) {
      var onEntering3 = this.$props.onEntering;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onEntering3) {
          onEntering3.call(void 0, event);
        }
      });
    },
    componentWillExit: function componentWillExit(event) {
      var onExit3 = this.$props.onExit;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onExit3) {
          onExit3.call(void 0, event);
        }
      });
    },
    updateContainerDimensions: function updateContainerDimensions(node, done) {
      if (done === void 0) {
        done = noop;
      }
      var content = node ? node.firstElementChild : null;
      if (content) {
        var newHeight = util_default.outerHeight(content);
        var newWidth = util_default.outerWidth(content);
        this.$data.maxHeight = newHeight;
        this.$data.maxWidth = newWidth;
        done();
      }
    }
  },
  computed: {
    animationEnteringStyle: {
      get: function get2() {
        var maxOffset;
        if (this.$props.direction === "vertical") {
          maxOffset = {
            maxHeight: this.maxHeight ? "".concat(this.maxHeight, "px") : null
          };
        } else {
          maxOffset = {
            maxWidth: this.maxWidth ? "".concat(this.maxWidth, "px") : null
          };
        }
        return {
          maxHeight: maxOffset.maxHeight,
          maxWidth: maxOffset.maxWidth
        };
      }
    }
  },
  // @ts-ignore
  setup: !isV38 ? void 0 : function() {
    var v3 = !!isV38;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render8(createElement) {
    var h = gh8 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, direction = _a.direction, childFactory = _a.childFactory, other = __rest5(_a, ["direction", "childFactory"]);
    var transitionName = "reveal-".concat(this.$props.direction);
    return (
      // @ts-ignore function children
      h(Animation, {
        appear: this.$props.appear,
        attrs: this.v3 ? void 0 : {
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration,
          componentChildStyle: this.$props.componentChildStyle,
          animationEnteringStyle: this.animationEnteringStyle,
          transitionName
        },
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration,
        onEnter: this.componentWillEnter,
        on: this.v3 ? void 0 : {
          "enter": this.componentWillEnter,
          "entering": this.componentIsEntering,
          "exit": this.componentWillExit
        },
        onEntering: this.componentIsEntering,
        onExit: this.componentWillExit,
        componentChildStyle: this.$props.componentChildStyle,
        animationEnteringStyle: this.animationEnteringStyle,
        transitionName
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
var Reveal = RevealVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/hooks/useAnimation.js
var animate = function animate2(transition, offset, animationFrame) {
  if (offset === void 0) {
    offset = 0;
  }
  if (animationFrame === void 0) {
    animationFrame = 0;
  }
  var duration = transition.duration;
  var start;
  var progress;
  var skip = offset && 1 - offset;
  if (transition.onStart) {
    transition.onStart();
  }
  var frame = function frame2(timestamp) {
    if (!start) {
      start = timestamp;
    }
    progress = timestamp - start + 1;
    var rate = progress / duration + skip;
    if (rate <= 1) {
      if (transition.onUpdate) {
        transition.onUpdate(rate);
      }
      animationFrame = window.requestAnimationFrame(frame2);
      offset = rate;
    } else {
      if (transition.onEnd) {
        transition.onEnd(1);
      }
      offset = 0;
    }
  };
  animationFrame = window.requestAnimationFrame(frame);
  return animationFrame;
};
var cancelAnimation = function cancelAnimation2(animationFrame) {
  if (animationFrame) {
    window.cancelAnimationFrame(animationFrame);
  }
};

export {
  AnimationChildVue2,
  AnimationChild,
  AnimationVue2,
  Animation,
  FadeVue2,
  Fade,
  ExpandVue2,
  Expand,
  PushVue2,
  Push,
  SlideVue2,
  Slide,
  ZoomVue2,
  Zoom,
  RevealVue2,
  Reveal,
  animate,
  cancelAnimation
};
//# sourceMappingURL=chunk-XR7RAY3Q.js.map
