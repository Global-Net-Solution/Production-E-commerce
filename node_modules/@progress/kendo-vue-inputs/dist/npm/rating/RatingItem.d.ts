import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { RatingItemProps } from './interfaces/RatingItemProps';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface RatingItemState {
}
/**
 * @hidden
 */
export interface RatingItemComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface RatingItemMethods {
    [key: string]: any;
    handleClick: (e: MouseEvent) => void;
    handleKeyDown: (e: KeyboardEvent) => void;
    handleFocus: (e: FocusEvent) => void;
    handleBlur: (e: FocusEvent) => void;
    handleMouseEnter: (e: MouseEvent) => void;
    handleMouseLeave: (e: MouseEvent) => void;
    handleMouseMove: (e: MouseEvent) => void;
}
/**
 * @hidden
 */
export interface RatingItemData {
}
/**
 * @hidden
 */
export interface RatingItemAll extends Vue2type, RatingItemMethods, RatingItemData, RatingItemComputed, RatingItemState {
}
/**
 * @hidden
 */
declare let RatingItemVue2: ComponentOptions<RatingItemAll, DefaultData<RatingItemData>, DefaultMethods<RatingItemAll>, RatingItemComputed, RecordPropsDefinition<RatingItemProps>>;
declare const RatingItem: DefineComponent<RatingItemProps, any, RatingItemData, RatingItemComputed, RatingItemMethods, {}, {}, {}, string, RatingItemProps, RatingItemProps, {}>;
export { RatingItem, RatingItemVue2 };
